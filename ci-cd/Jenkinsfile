pipeline {
    
    agent {
        node {
            label "jenkins-node"
        }
    }
    
    tools {
        maven "maven361"
    }
    
    stages{
        stage("Compilacao & Teste"){
            steps{
                sh "mvn clean package"
            }
        }
        
        stage("Analise de Qualidade"){
            steps{
                echo "ANALISE DE QUALIDADE"
                withSonarQubeEnv("SonarQube"){
                    sh """mvn sonar:sonar \
                    -Dsonar.projectKey=hw-springboot \
                    -Dsonar.projectVersion=${BUILD_ID}"""
                }
            }
        }
        
        stage("Resultado da Analise"){
            steps{
                timeout(time: 1, unit: 'MINUTES'){
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        
        stage("Salvando Artefato"){
            steps{
                echo "SALVANDO ARTEFATO"
                script {
                    def pom = readMavenPom file: 'pom.xml'
                    nexusPublisher nexusInstanceId: 'Nexus3', nexusRepositoryId: 'maven-releases', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: env.WORKSPACE+'/target/helloworld.war']], mavenCoordinate: [artifactId: "${pom.artifactId}", groupId: "${pom.groupId}", packaging: "${pom.packaging}", version: "${pom.version}"]]]
                }
            }
        }
        
        stage("Deploy Producao"){
            steps{
                echo "DEPLOY PRODUCAO"
		sh 'mvn wildfly:deploy'
            }
        }
    }

     post {
        always {
          echo "Build concluida"    
        }

        success {
          mail to: "root@localhost", subject: "Build com Sucesso", body: "Build ${BUILD_TAG} finalizada com sucesso!"  
        }

        failure {
          mail to: "root@localhost", subject: "Build com Falha", body: "Build ${BUILD_TAG} finalizada com falha!"
        }
    }

}
